#name: Node.js CI
#
#on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        node-version: [16.x]
#        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#          cache: 'npm'
#      - run: cd website
#      - run: npm ci
#      - run: npm run build --if-present
#      - name: Generate version
#        id: generate_version
#        run: |
#          echo "NEW_VERSION=$(date +'%Y-%m-%d-%H-%M-%S')-$RANDOM" >> $GITHUB_ENV
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ env.NEW_VERSION }}
#          release_name: Release ${{ env.NEW_VERSION }}
#          draft: false
#          prerelease: false
#      - run: cd website
#      - run: npm run build
#      - name: Archive production artifacts
#        run: |
#          mkdir build.zip
#          cp -r ./build/* build.zip/
#          zip -r build.zip build.zip/
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./build.zip
#          asset_name: build.zip
#          asset_content_type: application/zip
##    - name: Upload to FTP
##      uses: sebastianpopp/ftp-action@releases/v2
##      with:
##        host: ftp.wlhsfrc.com
##        user: ${{ secrets.FTP_USER }}@wlhsfrc.com
##        password: ${{ secrets.FTP_PASSWORD }}
##        localDir: "./"
##        remoteDir: "/home/xwj7xv1ampya"
##        args: "-R"
